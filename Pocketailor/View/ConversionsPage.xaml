<phone:PhoneApplicationPage
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:Pocketailor_View="clr-namespace:Pocketailor.View"
	xmlns:Pocketailor_ViewModel="clr-namespace:Pocketailor.ViewModel"
	xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
	xmlns:ec="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions"
    xmlns:Controls="clr-namespace:Pocketailor.View.Controls"
    xmlns:SampleData="clr-namespace:Expression.Blend.SampleData.SampleDataSource" 
    xmlns:adRotator="cle-namespace:AdRotator"
    xmlns:eim="clr-namespace:Microsoft.Expression.Interactivity.Media;assembly=Microsoft.Expression.Interactions"
    x:Class="Pocketailor.View.ConversionsPage"
    SupportedOrientations="Portrait" Orientation="Portrait"
	toolkit:TiltEffect.IsTiltEnabled="True"
    mc:Ignorable="d"
    shell:SystemTray.IsVisible="False">

	

	<phone:PhoneApplicationPage.Resources>
		<Pocketailor_View:BoolToCollapsed x:Key="BoolToCollapsed"/>
		<Pocketailor_View:BoolToNotBool x:Key="BoolToNotBool"/>
		<Pocketailor_View:StringToNextString x:Key="StringToNextString"/>
		<Pocketailor_View:VisibilityToOpposite x:Key="VisibilityToOpposite"/>
		<Pocketailor_View:BoolToNotCheckBox x:Key="BoolToNotCheckBox"/>
		<Pocketailor_View:StringToUpper x:Key="StringToUpper"/>
		<Pocketailor_View:StringOrDefaultOnEmpty x:Key="StringOrDefaultOnEmpty"/>
		<Pocketailor_View:SelectedConversionToBGImage x:Key="SelectedConversionToBGImage"/>
		<Pocketailor_View:SelectedConversionToPageTitleString x:Key="SelectedConversionToPageTitleString"/>
		<Pocketailor_View:BoolToStrings x:Key="BoolToStrings"/>
		<Pocketailor_View:BoolToOpacity x:Key="BoolToOpacity"/>
    
   
		<Pocketailor_ViewModel:ViewModelLocator x:Key="ViewModelInstanceLocator" />
	
	
  
  <SampleData:LongListSampleData x:Key="LongListSampleDataInstance" d:IsDataSource="True"/>

		<Style x:Key="noScrollListBoxStyle" TargetType="ListBox">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="Padding" Value="0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListBox">
						<ItemsPresenter/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Storyboard x:Name="animateLoadingPlaceholderStoryboard">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Left)" Storyboard.TargetName="rulerImage" RepeatBehavior="Forever">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="-35"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>

	</phone:PhoneApplicationPage.Resources>
	<i:Interaction.Triggers>
		<ec:DataTrigger Binding="{Binding IsConversionDataLoading}" Value="true">
			<eim:ControlStoryboardAction Storyboard="{StaticResource animateLoadingPlaceholderStoryboard}"/>
		</ec:DataTrigger>
		<ec:DataTrigger Binding="{Binding IsConversionDataLoading}" Value="false">
			<eim:ControlStoryboardAction Storyboard="{StaticResource animateLoadingPlaceholderStoryboard}" ControlStoryboardOption="Stop"/>
		</ec:DataTrigger>
	</i:Interaction.Triggers>



	<shell:SystemTray.BackgroundColor>
		<StaticResource ResourceKey="SystemTrayBGColor"/>
	</shell:SystemTray.BackgroundColor>
	<shell:SystemTray.ForegroundColor>
		<StaticResource ResourceKey="SystemTrayFGColor"/>
	</shell:SystemTray.ForegroundColor>
	

	<toolkit:TransitionService.NavigationInTransition>
    <toolkit:NavigationInTransition>
        <toolkit:NavigationInTransition.Backward>
            <toolkit:TurnstileTransition Mode="BackwardIn"/>
        </toolkit:NavigationInTransition.Backward>
        <toolkit:NavigationInTransition.Forward>
            <toolkit:TurnstileTransition Mode="ForwardIn"/>
        </toolkit:NavigationInTransition.Forward>
    </toolkit:NavigationInTransition>
</toolkit:TransitionService.NavigationInTransition>
<toolkit:TransitionService.NavigationOutTransition>
    <toolkit:NavigationOutTransition>
        <toolkit:NavigationOutTransition.Backward>
            <toolkit:TurnstileTransition Mode="BackwardOut"/>
        </toolkit:NavigationOutTransition.Backward>
        <toolkit:NavigationOutTransition.Forward>
            <toolkit:TurnstileTransition Mode="ForwardOut"/>
        </toolkit:NavigationOutTransition.Forward>
    </toolkit:NavigationOutTransition>
</toolkit:TransitionService.NavigationOutTransition>

	

	<phone:PhoneApplicationPage.Background>
		<StaticResource ResourceKey="PageBGColor"/>
	</phone:PhoneApplicationPage.Background>


	<phone:PhoneApplicationPage.FontFamily>
		<StaticResource ResourceKey="PhoneFontFamilyNormal"/>
	</phone:PhoneApplicationPage.FontFamily>
	<phone:PhoneApplicationPage.FontSize>
		<StaticResource ResourceKey="PhoneFontSizeNormal"/>
	</phone:PhoneApplicationPage.FontSize>
	<phone:PhoneApplicationPage.Foreground>
		<StaticResource ResourceKey="PhoneForegroundBrush"/>
	</phone:PhoneApplicationPage.Foreground>


	<d:DataContext>
		<Binding Source="{StaticResource SampleDataSource}"/>
	</d:DataContext>

	<!--LayoutRoot is the root grid where all page content is placed-->
	<Grid x:Name="LayoutRoot" Margin="0" Background="{StaticResource PageBGColor}">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
			<RowDefinition Height="80"/>
		</Grid.RowDefinitions>

		<Grid x:Name="headerGrid"  Grid.Row="0" Margin="0" VerticalAlignment="Top">
			<Grid.RowDefinitions>
				<RowDefinition Height="2*"/>
				<RowDefinition Height="1*"/>
			</Grid.RowDefinitions>


			<Image x:Name="bgImage" 
				Grid.RowSpan="3" 
				VerticalAlignment="Top" Source="{Binding SelectedConversionType, Converter={StaticResource SelectedConversionToBGImage}}" Margin="0"/>
			
			<Grid x:Name="titleBarGrid"  
				Grid.Row="0" 
				Margin="0" Background="Black" VerticalAlignment="Top">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<StackPanel x:Name="logoContainer" Orientation="Horizontal" VerticalAlignment="Top" Grid.Column="0" Margin="12,0,0,0">
					<Image Source="/Images/SmallLogo.png" Margin="0,3,2,0" Stretch="None"/>
					<TextBlock Foreground="{StaticResource PivotTitleColor}">
						<Run Text="POCKETAILOR"/>
					</TextBlock>
				</StackPanel>
				<TextBlock Grid.Column="1" x:Name="profileName" FontSize="22" TextAlignment="Right" Margin="0,0,12,0" Text="{Binding SelectedProfile.Name, ConverterParameter=[no name];, Converter={StaticResource StringOrDefaultOnEmpty}}"/>
			</Grid>
			
			<Grid x:Name="pageTitleContainerGrid" 
				Grid.Row="1"
				Background="#8ABE2D" VerticalAlignment="Top" >
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<TextBlock x:Name="pageTitleTextBlock" Grid.Column="0" TextWrapping="Wrap" Text="{Binding SelectedConversionType, Converter={StaticResource SelectedConversionToPageTitleString}}" FontFamily="{StaticResource ScriptFont}" Margin="24,0,0,0" FontSize="53.333" Foreground="{StaticResource PageTxtColor}" />
				<Button x:Name="regionChangeBtn" Content="{Binding SelectedRegionString}" Grid.Column="1" HorizontalAlignment="Right" Margin="0,0,24,0" VerticalAlignment="Center">
					<Button.Resources>
						<Style x:Key="ButtonStyle1" TargetType="Button">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="Button">
										<Grid>
											<TextBlock Text="{TemplateBinding Content}" FontFamily="Segoe WP" FontSize="32" />
										</Grid>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
							<Setter Property="FontSize" Value="26.667"/>
						</Style>
					</Button.Resources>
					<Button.Projection>
						<PlaneProjection/>
					</Button.Projection>
					<Button.Foreground>
						<StaticResource ResourceKey="PageTxtColor"/>
					</Button.Foreground>
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="Click">
							<ec:NavigateToPageAction TargetPage="/View/EditRegionPage.xaml"/>
						</i:EventTrigger>
					</i:Interaction.Triggers>
					<Button.Style>
						<StaticResource ResourceKey="ButtonStyle1"/>
					</Button.Style>
				</Button>
			</Grid>
				
			
		</Grid>

		<Grid x:Name="loadingConversionDataPlaceHolderContainer"
			Grid.Row="1"
			Visibility="{Binding IsConversionDataLoading, Converter={StaticResource BoolToVisibility}}" d:IsHidden="True">
			<Grid HorizontalAlignment="Center" VerticalAlignment="Center" Width="230">
				<Grid.Clip>
					<RectangleGeometry Rect="0, 0, 230, 110"/>
				 </Grid.Clip>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<TextBlock x:Name="textBlock" Grid.Row="0" 
					FontFamily="/Pocketailor;component/Fonts/Fonts.zip#EraserDust" 
					FontSize="{StaticResource HelpTxtFontSizeLarge}" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Margin="0,0,0,6" 
					>
				<TextBlock.RenderTransform>
					<CompositeTransform/>
				</TextBlock.RenderTransform>Loading...</TextBlock>
				<Canvas Grid.Row="1">
					<Image x:Name="rulerImage" 
						Canvas.Left="-30"
						Source="/Images/ruler.jpg" Stretch="None" />
				</Canvas>
			</Grid>
		</Grid>
		
		
		<toolkit:LongListSelector x:Name="conversionsLongListSelector" 
			Grid.Row="1" IsFlatList="False" 
			ItemsSource="{Binding GroupedConversions}"
			GroupViewOpened="conversionsLongListSelector_GroupViewOpened"
			GroupViewClosing="conversionsLongListSelector_GroupViewClosing"
			DisplayAllGroups="True" Background="Transparent" BufferSize="1">
			<toolkit:LongListSelector.Resources>
				
				<DataTemplate x:Key="groupHeaderTemplate">
					<!-- The header for the group e.g. letter -->
					<Border Background="Transparent" Margin="12,6,0,6" 
						Visibility="{Binding HasItems, Converter={StaticResource BoolToVisibility}}" 
						HorizontalAlignment="Left">
						<Border Background="{StaticResource TileBGColor}" 	
							Padding="8,0,0,0" 
							Width="62" Height="62" 				 
							HorizontalAlignment="Left">
							<TextBlock Text="{Binding Key}" 
								Foreground="{StaticResource PageTxtColor}" 
								FontSize="48"
								FontFamily="{StaticResource PhoneFontFamilySemiLight}"
								HorizontalAlignment="Left"
								VerticalAlignment="Bottom"/>
						</Border>
					</Border>
				</DataTemplate>
        
				<DataTemplate x:Key="groupFooterTemplate">
					<!-- The footer for each group -->
				</DataTemplate>

				<ItemsPanelTemplate x:Key="groupItemsPanelTemplate">
					<!-- The selection dialog container -->
					<toolkit:WrapPanel Orientation="Horizontal"/>
				</ItemsPanelTemplate>
        
				<DataTemplate x:Key="groupItemTemplate">
					<!-- The individual item in the selector dialog -->
					<Border Background="{StaticResource TileBGColor}"
						Margin="6" 
						IsHitTestVisible="{Binding HasItems}"
						Width="99" Height="99"  
						Opacity="{Binding HasItems, ConverterParameter=TrueIsOpaque, Converter={StaticResource BoolToOpacity}}">
						<Border.Projection>
							<PlaneProjection RotationX="-60"/>
						</Border.Projection>
						<TextBlock Text="{Binding Key}" Foreground="{StaticResource PageTxtColor}" FontSize="48" 
								Margin="8,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
					</Border>
				</DataTemplate>

				<DataTemplate x:Key="itemTemplate" toolkit:TiltEffect.SuppressTilt="True">
					<!-- Applied to each item -->
					<!-- Uber simple, is  quick -->
<!--
          <StackPanel Orientation="Horizontal">
            <TextBlock Margin="6" FontSize="24" Text="{Binding BrandName, FallbackValue=Loading...}"></TextBlock>
            <TextBlock Margin="6" FontSize="24" Text="{Binding FormattedValue}"></TextBlock>
          </StackPanel>
-->
					<Grid x:Name="rootItemTemplateGrid" Margin="12,0,0,0">
						<Grid.Resources>
							<Storyboard x:Key="animateAdjustmentStoryBoard">
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="adjustmentSizeContainer" RepeatBehavior="Forever">
									<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="7"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0">
										<EasingDoubleKeyFrame.EasingFunction>
											<ElasticEase EasingMode="EaseOut"/>
										</EasingDoubleKeyFrame.EasingFunction>
									</EasingDoubleKeyFrame>
									<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</Grid.Resources>
						<i:Interaction.Triggers>
							<ec:DataTrigger Binding="{Binding IsAdjusting}" Value="true">
								<i:Interaction.Behaviors>
									<ec:ConditionBehavior>
										<ec:ConditionalExpression>
											<ec:ComparisonCondition LeftOperand="{Binding Tag, ElementName=adjustmentContainerGrid}" RightOperand="loaded"/>
										</ec:ConditionalExpression>
									</ec:ConditionBehavior>
								</i:Interaction.Behaviors>
								<eim:ControlStoryboardAction x:Name="startAdjustmentAnimation" Storyboard="{StaticResource animateAdjustmentStoryBoard}"/>
							</ec:DataTrigger>
							<ec:DataTrigger Binding="{Binding IsAdjusting}" Value="false">
								<i:Interaction.Behaviors>
									<ec:ConditionBehavior>
										<ec:ConditionalExpression>
											<ec:ComparisonCondition LeftOperand="{Binding Tag, ElementName=adjustmentContainerGrid}" RightOperand="loaded"/>
										</ec:ConditionalExpression>
									</ec:ConditionBehavior>
								</i:Interaction.Behaviors>
								<eim:ControlStoryboardAction x:Name="stopAdjustmentAnimation" Storyboard="{StaticResource animateAdjustmentStoryBoard}" ControlStoryboardOption="Stop"/>
							</ec:DataTrigger>
						</i:Interaction.Triggers>
						
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
            
						<Grid x:Name="conversionResultContainerGrid"
							Grid.Column="1" HorizontalAlignment="Left"
							Margin="0,0,0,10" Grid.Row="0" VerticalAlignment="Center" Tap="conversionResultContainerGrid_Tap" Height="50">
						 	<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<!-- The Fallback value is quite important since if is loading from fast scolling on e.g. 
					         a LongListSelector then the Fallback value will be displayed -->
							<TextBlock x:Name="brandNameTextBlock"
								Text="{Binding BrandName, FallbackValue=Loading ...}"
								Grid.Column="0" FontFamily="Segoe WP"
								FontSize="32" Foreground="{StaticResource PageTxtColor}"/>
							<StackPanel x:Name="adjustmentSizeContainer" Grid.Column="1" Orientation="Horizontal" RenderTransformOrigin="0.5,0.5">
								<StackPanel.RenderTransform>
									<CompositeTransform/>
								</StackPanel.RenderTransform>
								<TextBlock x:Name="clothingSizeTextBlock"
									Text="{Binding FormattedValue, FallbackValue=''}"
									Margin="7,0,-2,0" FontSize="32" Foreground="{StaticResource SubTitleColor}"
									FontFamily="Segoe WP"/>
								<TextBlock x:Name="questionTextBlock"
									Text="?" FontSize="32" Foreground="{StaticResource SubTitleColor}"
									FontFamily="Segoe WP"
									Visibility="Collapsed"/>
							</StackPanel>
						</Grid>
            
			<Grid x:Name="adjustmentContainerGrid"
				  Visibility="{Binding IsAdjusting, Converter={StaticResource BoolToVisibility}}"
                  Margin="0,0,12,32"
                  Grid.Row="1" Grid.Column="1" Tag="loaded">
      
      <Grid.Resources>
        <Style x:Key="bigSmallBtnStyle" TargetType="Button">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="Button">
                <Grid>
                  <TextBlock Padding="0,6,0,6" FontSize="28" HorizontalAlignment="Left" Text="{TemplateBinding Content}" Foreground="{StaticResource SubTitleColor}" FontFamily="Segoe WP" />
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>

        <Pocketailor_View:BoolToNotBool x:Key="BoolToNotBool"/>
        <Pocketailor_View:BoolToOpacity x:Key="BoolToOpacity"/>

      </Grid.Resources>

      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="1*" />
        <ColumnDefinition Width="1*" />
        <ColumnDefinition Width="1*" />
      </Grid.ColumnDefinitions>

      <Button x:Name="tooBigBtn" Content="too big" Grid.Column="0"
        Style="{StaticResource bigSmallBtnStyle}"
        HorizontalAlignment="Left"
        Tap="tooBigBtn_Tap"
        IsHitTestVisible="{Binding NoneSmaller, Converter={StaticResource BoolToNotBool}}"
        Opacity="{Binding NoneSmaller, ConverterParameter=FalseIsOpaque, Converter={StaticResource BoolToOpacity}}"/>
      <Button x:Name="rightSizeBtn" Content="confirm" Grid.Column="1"
        Style="{StaticResource bigSmallBtnStyle}"
        HorizontalAlignment="Center"
        Tap="rightSizeBtn_Tap"
        FontWeight="Bold" />
      <Button x:Name="tooSmallBtn" Content="too small" Grid.Column="2"
        Style="{StaticResource bigSmallBtnStyle}"
        HorizontalAlignment="Right"
        Tap="tooSmallBtn_Tap"
        IsHitTestVisible="{Binding NoneBigger, Converter={StaticResource BoolToNotBool}}"
        Opacity="{Binding NoneBigger, ConverterParameter=FalseIsOpaque, Converter={StaticResource BoolToOpacity}}"
				
					/>

    </Grid>
			
			
			
			
			
			
								
					</Grid>
          
				</DataTemplate>

				<DataTemplate x:Key="listFooterTemplate">
					<!-- Bottom of whole control -->
					<Grid/>
				</DataTemplate>
				<DataTemplate x:Key="listHeaderTemplate">
					<!-- Top of whole control -->
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<Controls:AboutButton x:Name="editHiddenBrandsBtn" 
							Grid.Row="0"
							Margin="12,12,12,0"
							VerticalAlignment="Top" TitleText="Edit preferred brands"
							IconImage="/Images/AppBar/appbar.edit.png" >
							<i:Interaction.Triggers>
								<i:EventTrigger EventName="Tap">
									<ec:NavigateToPageAction TargetPage="/View/EditBlacklistedBrands.xaml"/>
								</i:EventTrigger>
							</i:Interaction.Triggers>
						</Controls:AboutButton>
						
						<Controls:AboutButton x:Name="showKeyMeasurementsBtn" 
							Grid.Row="1"
							Margin="12,12,12,12" 
							VerticalAlignment="Top" TitleText="Show key measurements" 
							IconImage="/Images/AppBar/appbar.pocketailor.tape.png">
							<i:Interaction.Triggers>
								<i:EventTrigger EventName="Tap">
									<ec:ChangePropertyAction x:Name="showMeasurementListBoxChangePropertyAction" TargetName="measurementsListBox" PropertyName="Visibility" Value="{Binding Visibility, Converter={StaticResource VisibilityToOpposite}, ElementName=measurementsListBox}"/>
								</i:EventTrigger>
								<i:EventTrigger EventName="Tap">
									<ec:ChangePropertyAction x:Name="changeTextChangePropertyAction" PropertyName="TitleText" Value="{Binding TitleText, ConverterParameter=Show key measurements|Hide key measurements, Converter={StaticResource StringToNextString}, ElementName=showKeyMeasurementsBtn}"/>
								</i:EventTrigger>
							</i:Interaction.Triggers>
						</Controls:AboutButton>
						
						<ListBox x:Name="measurementsListBox"
							Grid.Row="2"
							Visibility="Collapsed"
							Margin="12,0,12,8">
							<ListBox.Resources>
								<DataTemplate x:Key="DataTemplate1">
									<Grid x:Name="otherUnitMeasurmentGrid" Margin="0,0,0,12">
										<i:Interaction.Triggers>
											<i:EventTrigger EventName="Tap">
												<ec:ChangePropertyAction TargetName="otherMeasurementUnitsListBox" PropertyName="Visibility" Value="{Binding Visibility, Converter={StaticResource VisibilityToOpposite}, ElementName=otherMeasurementUnitsListBox}"/>
											</i:EventTrigger>
										</i:Interaction.Triggers>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="1*" />
											<ColumnDefinition Width="1*" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
										<TextBlock 
											Grid.Column="0" Grid.Row="0"
											FontSize="{StaticResource PhoneFontSizeLarge}" Foreground="{StaticResource PageTxtColor}"
											Text="{Binding Name, FallbackValue=Height}" HorizontalAlignment="Right" />
										<TextBlock 
											Grid.Column="1" Grid.Row="0"
											FontSize="{StaticResource PhoneFontSizeLarge}" Foreground="{StaticResource SubTitleColor}"
											Text="{Binding FormattedValue, FallbackValue=5 ft. 8 in.}" Margin="6,0,0,0" HorizontalAlignment="Left" />
										<ListBox
											x:Name="otherMeasurementUnitsListBox"
											Grid.Column="1" Grid.Row="1"
											Visibility="Collapsed"
											ItemsSource="{Binding OtherUnitFormattedValues}"
											>
											<ListBox.Resources>
												<DataTemplate x:Key="DataTemplate2">
													<Grid>
														<TextBlock 
															Text="{Binding FallbackValue=170 cm.}" 
															Foreground="{StaticResource SubTitleColor}"
															Margin="6,0,0,0" FontSize="25.333" />
													</Grid>
												</DataTemplate>
											</ListBox.Resources>
											<ListBox.Style>
												<StaticResource ResourceKey="noScrollListBoxStyle"/>
											</ListBox.Style>
											<ListBox.ItemTemplate>
												<StaticResource ResourceKey="DataTemplate2"/>
											</ListBox.ItemTemplate>
											
											
										</ListBox>
									</Grid>
								</DataTemplate>
							</ListBox.Resources>
							<ListBox.ItemsSource>
								<Binding Path="AppViewModel.ConversionMeasurements" Source="{StaticResource ViewModelLocator}"/>
							</ListBox.ItemsSource>
							<ListBox.Style>
								<StaticResource ResourceKey="noScrollListBoxStyle"/>
							</ListBox.Style>
							<ListBox.ItemTemplate>
								<StaticResource ResourceKey="DataTemplate1"/>
							</ListBox.ItemTemplate>
						</ListBox>

						

					</Grid>
					
				</DataTemplate>
			</toolkit:LongListSelector.Resources>
			<toolkit:LongListSelector.Visibility>
				<Binding Converter="{StaticResource BoolToCollapsed}" Path="IsConversionDataLoading"/>
			</toolkit:LongListSelector.Visibility>

			<d:DataContext>
				<StaticResource ResourceKey="LongListSampleDataInstance"/>
			</d:DataContext>

			<toolkit:LongListSelector.ListHeaderTemplate>
				<StaticResource ResourceKey="listHeaderTemplate"/>
			</toolkit:LongListSelector.ListHeaderTemplate>
			<toolkit:LongListSelector.ListFooterTemplate>
				<StaticResource ResourceKey="listFooterTemplate"/>
			</toolkit:LongListSelector.ListFooterTemplate>
			<toolkit:LongListSelector.ItemTemplate>
				<StaticResource ResourceKey="itemTemplate"/>
			</toolkit:LongListSelector.ItemTemplate>
			
			<toolkit:LongListSelector.GroupItemTemplate>
				<StaticResource ResourceKey="groupItemTemplate"/>
			</toolkit:LongListSelector.GroupItemTemplate>
			<toolkit:LongListSelector.GroupItemsPanel>
				<StaticResource ResourceKey="groupItemsPanelTemplate"/>
			</toolkit:LongListSelector.GroupItemsPanel>
			
			<toolkit:LongListSelector.GroupFooterTemplate>
				<StaticResource ResourceKey="groupFooterTemplate"/>
			</toolkit:LongListSelector.GroupFooterTemplate>
			<toolkit:LongListSelector.GroupHeaderTemplate>
				<StaticResource ResourceKey="groupHeaderTemplate"/>
			</toolkit:LongListSelector.GroupHeaderTemplate>
		</toolkit:LongListSelector>

		<!--
		<Border Grid.Row="2"   Width="480" Height="80" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" BorderThickness="1" BorderBrush="White">
			<TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
				<Run Text="Advert here"/>
			</TextBlock>
		</Border>
		-->
	

		<adRotator:AdRotatorControl
			xmlns:adRotator="clr-namespace:AdRotator;assembly=AdRotator"
			x:Name="AdRotatorControl"
			Grid.Row="2"
			Width="480" Height="80"
			SettingsUrl="http://www.lassiv.com/pocketailor/misc/PocketailorWPAdConfig.xml"
			DefaultAdType="PubCenter"
			DefaultSettingsFileUri="/Pocketailor;component/Ads/RotatorAdSettings.xml"
			SlidingAdDirection="Left"
			SlidingAdDisplaySeconds="10"
			SlidingAdHiddenSeconds="0"/>
	
	</Grid>
	

</phone:PhoneApplicationPage>